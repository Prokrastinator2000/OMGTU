using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Rgr
{
    class Program
    {
        
        
        static void Main(string[] args)
        {
            while (true)
            {
                Console.WriteLine("Введите цифру для выбора пункта меню\n1. Сведения об авторе\n2. Обратная польская запись\n3. Скобочная последовательность\n4. Выход из программы");
                try
                {
                    int Fate = Convert.ToInt32(Console.ReadLine());
                    if (Fate == 1)
                    {
                        Console.WriteLine("Автор: Ильин Максим Викторович Фит-231");
                    } 
                    if (Fate == 2)
                    {
                         Console.WriteLine("Введите выражение: ");
        string phrase = Console.ReadLine();
                        if (phrase == "")
                        {
                            Console.WriteLine("Пустое выражение");
                           
                        }
        Stack<string> stack = new Stack<string>();
        double result = 0;
        double a;
        double b;
        bool err = false;
        foreach (char c in phrase) {
            if (c == '+' || c == '-' || c == '*' || c == '/')
            {
                if (stack.Count < 2) { Console.WriteLine("Ошибка: Отсутствие элемента для произведения вычисления"); err = true; break; }
                if (stack.Count > 2) { Console.WriteLine("Ошибка: Неоднозначность результата"); err = true; break; }
                b = Convert.ToDouble(stack.Pop()); //Выносим элемент из stack
                a = Convert.ToDouble(stack.Pop()); //Выносим элемент из stack
                if (b == 0) { Console.WriteLine("Ошибка: Деление на ноль"); err = true; break; }
                if (c == '+') { result = a+b; } //Производим операцию над двумя числами
                if (c == '-') { result = a - b; }
                if (c == '*') { result = a * b; }
                if (c == '/') { result = a / b; }
                stack.Push(Convert.ToString(result)); //Возвращает результат операции в stack
            }
            else {
                if (c != ' ')
                {
                    stack.Push(Convert.ToString(c)); //Добавляет элемент в stack
                }
            }
        }
        if (err == false & stack.Count==1) { Console.WriteLine("Результат вычисления: "+ stack.Pop()); }
        if (err == false & stack.Count>1) { Console.WriteLine("Ошибка: Отсутствие операции для произведения вычисления"); } 
                    } 
                    if (Fate == 3)
                    {
                        Console.WriteLine("Введите выражение: ");
                        string phrase = Console.ReadLine();  //Запись всего выражения в строку
                        if (phrase == "")
                        {
                            Console.WriteLine("Пустое выражение");

                        }
                        Stack<char> stack = new Stack<char>(); //Создаётся Stack типа char
                        bool good = true;
                        foreach (char c in phrase)
                        {
                            if (c == '[' || c == '{' || c == '(')
                            { //Если встречается открывающая скобка, запоминаем её, добавляя в stack
                                stack.Push(c);
                            }
                            if (c == ']')
                            {
                                if (stack.Count == 0) { good = false; break; }
                                if (stack.Pop() != '[') { good = false; break; }//Если на пути встречается закрывающая скобка, тогда проверяется наличие открывающей скобки в stack, и тк stack выдаёт последнее значение, то оно выдаст последнюю открывающую скобку вписанную в stack
                            }
                            if (c == '}')
                            {
                                if (stack.Count == 0) { good = false; break; }
                                if (stack.Pop() != '{') { good = false; break; }
                            }
                            if (c == ')')
                            {
                                if (stack.Count == 0) { good = false; break; }
                                if (stack.Pop() != '(') { good = false; break; }
                            }
                        }
                        if (stack.Count != 0) { good = false; }//Если строка осталось не пусто, тогда false 
                        if (good) { Console.WriteLine("Выражение составлено корректно"); }
                        else { Console.WriteLine("Выражение составлено некорректно"); } //При любом Невыполненном условии выводится ошибка об этом
                    }
                    if (Fate == 4)
                    {
                        break;
                    }
                }
                catch (Exception e)
                {
                    Console.WriteLine("Неправильный ввод");
                }
                
            }
        }
    }
}
