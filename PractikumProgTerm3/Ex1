import numpy as np
def MatrixInvis(mat):
    for row in mat:
        for cell in row:
            if (cell - int(cell) == 0.0):
                print ('\n'.join(' '.join(str(int(cell)) for cell in row) for row in mat))
            else:
                print('\n'.join(' '.join(str(cell)) for cell in row) for row in mat))
my_array = np.arange(10,70,2)
print(my_array)
print("-----------------------------------")
A = my_array.reshape(6,5)
A = np.transpose(A)
MatrixInvis(A)
print("-----------------------------------")
A = A * 2.5
A[0]=A[0]-5
MatrixInvis(A)
print("-----------------------------------")
B = np.random.randint (0,10,(6,3))
MatrixInvis(B)
print("-----------------------------------")
a = np.sum(A,axis=1)
print(len(a))
b = np.sum(B, axis=0)
print(len(b))
print("-----------------------------------")
MatrixInvis(np.dot(A,B))
print("-----------------------------------")
A=np.delete(A,2,1) #7.1
MatrixInvis(A)
B=np.insert(B,3,np.random.randint(10,20,(3,6)),1) #7.2
MatrixInvis(B)
print("-----------------------------------")
detA = np.linalg.det(A)
print(detA)
detB = np.linalg.det(B)
print(detB)
reverseB = np.linalg.pinv(B)
MatrixInvis(reverseB)
print("-----------------------------------")
MatrixInvis(np.linalg.matrix_power(A,6))
MatrixInvis(np.linalg.matrix_power(B,14))
print("-----------------------------------")
D = np.array([[1,-4,2,1.4],[2,-3.5,9,0],[7,5,-4,3],[1,2,3,4]])
E = np.array([20,7.8,-6,6])
X = np.linalg.solve(D,E)
print(X)
print(np.allclose(np.dot(D, X), E))
